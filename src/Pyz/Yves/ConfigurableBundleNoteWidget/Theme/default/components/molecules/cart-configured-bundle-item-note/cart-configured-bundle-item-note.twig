{% extends model('component') %}

{% define config = {
    name: 'cart-configured-bundle-item-note',
    tag: 'cart-configured-bundle-item-note',
} %}

{% define data = {
    form: {},
    canWrite: required,
    label: '',
    note: '',
} %}

{% define attributes = {
    'class-to-toggle': 'is-hidden',
} %}

{% block body %}
    {% set formNote = data.form.vars is defined ? data.form.vars.value.note %}
    {% set note = data.note ?: formNote %}
    {% set isNoteNotEmpty = note is not empty %}

    {% block content %}
        {% if data.canWrite or isNoteNotEmpty %}
            {% block contentInner %}
                <div class="{{ config.name }}__container">
                    {% if isNoteNotEmpty %}
                        <div class="{{ config.name }}__text-wrap {{ config.jsName }}__text-wrap">
                            <div class="{{ config.name }}__text">{{ note | nl2br }}</div>
                            {% if data.canWrite %}
                                {% block cartItemNoteActions %}
                                    {% include molecule('cart-configured-bundle-item-note-actions', 'ConfigurableBundleNoteWidget') with {
                                        data: {
                                            buttons: [
                                                {
                                                    class: config.jsName ~ '__edit',
                                                    text: 'configured_bundle_note_widget.edit_note' | trans,
                                                },
                                                {
                                                    class: config.jsName ~ '__remove',
                                                    text: 'configured_bundle_note_widget.remove_note' | trans,
                                                },
                                            ],
                                        },
                                    } only %}
                                {% endblock %}
                            {% endif %}
                        </div>
                    {% endif %}
                    {% block form %}
                        {% if data.canWrite %}
                            {% set jsModifier = data.form.vars.value.groupKey | replace({"." : ""}) %}
                            {% set hiddenWrapperClass = isNoteNotEmpty ? 'is-hidden' %}
                            {% set hiddenContentClass = not isNoteNotEmpty ? 'is-hidden' %}
                            {% set activeClass = isNoteNotEmpty ? 'active' %}

                            <div class="{{ config.name }}__form {{ config.jsName }}__form {{ config.jsName }}__form--{{ jsModifier }} {{ hiddenWrapperClass }}">
                                {% embed molecule('toggler-item') with {
                                    modifiers: ['bundle-note'],
                                    data: {
                                        title: 'configurable_bundle_note.enter_note' | trans,
                                        triggerClass: config.jsName ~ '__trigger',
                                        targetClass: config.jsName ~ '__target',
                                    },
                                    embed: {
                                        form: data.form,
                                    }
                                } only %}
                                    {% block title %}
                                        <h4 class="text-break {{ component.renderClass(config.name ~ '__title', modifiers) }} {{ data.triggerClass }} {{ titleActiveClass }} {{ titleReadOnlyClass }}" {{ targetAttribute }}>{{ data.title }}</h4>
                                    {% endblock %}

                                    {% block contentText %}
                                        {% embed molecule('form') with {
                                            modifiers: ['note'],
                                            data: {
                                                form: embed.form,
                                                options: {
                                                    action: url('configurable-bundle-note/add'),
                                                },
                                                submit: {
                                                    enable: true,
                                                    text: 'configurable_bundle_note.form.save' | trans,
                                                },
                                            },
                                        } only %}
                                            {% block field %}
                                                {{ form_row(field, {
                                                    rowAttr: {
                                                        class: config.name ~ '__field ' ~ fieldLayoutClass
                                                    },
                                                    'label':false,
                                                }) }}
                                            {% endblock %}
                                        {% endembed %}
                                    {% endblock %}
                                {% endembed %}
                            </div>
                        {% endif %}
                    {% endblock %}
                </div>
            {% endblock %}
        {% endif %}
    {% endblock %}
{% endblock %}
